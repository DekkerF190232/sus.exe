package mogroft/world/WorldManager {

  use sus/System;
  use mogroft/world/World;
  use mogroft/world/Block;
  use mogroft/world/Blocks;
  use mogroft/world/Chunk;
  use mogroft/world/ChunkList;
  use mogroft/world/ChunkCoordList;
  
  struct WorldManager (
    PTR[World] world,
    ChunkEventHandler chunkEventHandler
  );
  
  struct ChunkEventHandler(
    funcptr[(PTR[Chunk] chunk)] onLoaded
  );

  func WorldManager new(ChunkEventHandler chunkEventHandler) {
    done WorldManager(
      world = RTP[PTR[World]](0),
      chunkEventHandler = chunkEventHandler
    );
  }

  func loadExample(PTR[WorldManager] this) {
    PTR[World] world = World/alloc();
    DRF(this).world = world;

    DRF(world).player.position.z = 10.0;
    
    funcptr[(PTR[Chunk] chunk)] onLoadedFunc = DRF(this).chunkEventHandler.onLoaded;

    PTR[ChunkList] chunkList = REF(DRF(world).chunkList);

    PTR[Chunk] newChunk = RTP[PTR[Chunk]](0);
  
    newChunk = ChunkList/add(this: chunkList);
    DRF(newChunk).chunkCoord = ChunkCoord(x = 0, y = 0, z = 0);
    generateChunk(chunk: newChunk);
    onLoadedFunc(chunk: newChunk);

    newChunk = ChunkList/add(this: chunkList);
    DRF(newChunk).chunkCoord = ChunkCoord(x = 0, y = -1, z = 0);
    generateChunk(chunk: newChunk);
    onLoadedFunc(chunk: newChunk);
  }

  func generateChunk(PTR[Chunk] chunk) {
    #System/print(s: STR"miau ");
    
    PTR[Block] blocks = RTP[PTR[Block]](REF(DRF(chunk).blocks));
    int32 y = 0;
    while (y < Chunk/SIZE) {
      int32 z = 0;
      while (z < Chunk/SIZE) {
        int32 x = 0;
        while (x < Chunk/SIZE) {
          PTR[Block] block = blocks + (z * Chunk/SIZE * Chunk/SIZE) + (y * Chunk/SIZE) + x;
          
          if (DRF(chunk).chunkCoord.y >= 0) {
            DRF(block) = Blocks/BLOCK_AIR;
          } else {
            DRF(block) = Blocks/BLOCK_STONE;
          }
          
          #System/print(b: Block/isSolid(block: block));
          
          x = x + 1;
        }
        z = z + 1;
      }
      y = y + 1;
    }
    
    #System/print(s: STR"world manager chunk: ");
    #System/print(i: RTP[int32](chunk));
    #System/println();
  }

}

